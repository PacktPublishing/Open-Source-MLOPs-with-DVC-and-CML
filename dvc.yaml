stages:
  process_data:
    cmd: python3 process_data.py
    deps:
    - data/IMDB_movie_ratings_sentiment.csv
    - process_data.py
    params:
    - process
    outs:
    - data/processed/X_test.txt
    - data/processed/X_train.txt
    - data/processed/y_test.txt
    - data/processed/y_train.txt
  train:
    cmd: >-
      python3 train_sklearn.py
      --split-data-path data/processed
      --model-path models/model.joblib
      --metrics-path results/metrics.json
      --min-df ${train.min_df}
      --max-df ${train.max_df}
      --max-ngrams ${train.max_ngrams}
      --stopwords ${train.stopwords}
      --loss ${train.loss}
      --learning-rate ${train.learning_rate}
    deps:
    - data/processed/X_test.txt
    - data/processed/X_train.txt
    - data/processed/y_test.txt
    - data/processed/y_train.txt
    - train_sklearn.py
    params:
    - train
    outs:
    - models/model.joblib
  predict:
    foreach:
      - train
      - test
    do:
      cmd: >-
        python3 predict.py
        --model-path models/model.joblib
        --data-path data/processed/X_${item}.txt
        --pred-path data/predictions/y_${item}_pred.txt
      deps:
      - data/processed/X_${item}.txt
      - models/model.joblib
      - predict.py
      outs:
      - data/predictions/y_${item}_pred.txt
  evaluate:
    foreach:
      - train
      - test
    do:
      cmd: >-
        python3 evaluate.py
        --pred-path data/predictions/y_${item}_pred.txt
        --true-path data/processed/y_${item}.txt
        --metrics-path results/${item}_metrics.json
      deps:
      - data/predictions/y_${item}_pred.txt
      - data/processed/y_${item}.txt
      - evaluate.py
      metrics:
      - results/${item}_metrics.json
  confusion: 
    foreach:
      - train
      - test
    do:
      cmd: >-
        python3 concatenate.py
        --true-labels data/processed/y_${item}.txt
        --predicted-labels data/predictions/y_${item}_pred.txt
        --output-path data/predictions/${item}_confusion.csv
      deps:
      - data/processed/y_${item}.txt 
      - data/predictions/y_${item}_pred.txt
      - concatenate.py
      plots:
        - data/predictions/${item}_confusion.csv:
            x: "true"
            y: "pred"
            template: confusion
            x_label: "True class"
            y_label: "Predicted class"
            title: "${item} set confusion matrix"
